
# 1. Написать функцию num_translate(), переводящую числительные от 0 до 10 c английского на русский язык. Например:
# >>> num_translate("one")
# "один"
# >>> num_translate("eight")
# "восемь"
# Если перевод сделать невозможно, вернуть None. Подумайте, как и где лучше хранить информацию,
# необходимую для перевода: какой тип данных выбрать, в теле функции или снаружи.
# 2. * (вместо задачи 1) Доработать предыдущую функцию в num_translate_adv(): реализовать корректную работу с числительными,
#  начинающимися с заглавной буквы — результат тоже должен быть с заглавной. Например:
# >>> num_translate_adv("One")
# "Один"
# >>> num_translate_adv("two")
# "два"

# def num_translate(k):
# 	d = {'one': 'один', 'two': 'два','three': 'три','four':'четыре', 'five': 'пять','six': 'шесть','seven': 'семь', 'eight':'восемь','nine':'девять','ten': 'десять'}
# 	if k.islower():
# 		return d.get(k)
# 	else:
# 		return d.get(k.lower()).capitalize()

# num = input("Ведите число: ")
# print(num_translate(num))


# 3. 

# def thesaurus(*args):
# 	dict = {}
# 	for i in args:
# 		if i[0] not in dict.keys():
# 			dict[i[0]] = []
# 		dict[i[0]].append(i)
# 	return dict

# print(thesaurus('Иван', 'Мария', 'Петр', 'Илья', 'Павел'))

#  4. (вместо задачи 3) Написать функцию thesaurus_adv(), принимающую в качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь, в котором ключи — первые буквы фамилий, а значения — словари, реализованные по схеме предыдущего задания и содержащие записи, в которых фамилия начинается с соответствующей буквы. Например:
# >>> thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева")
# {
# "А": {
# "П": ["Петр Алексеев"]
# },
# "И": {
# "И": ["Илья Иванов"]
# },
# "С": {
# "И": ["Иван Сергеев", "Инна Серова"],
# "А": ["Анна Савельева"]
# }
# }
